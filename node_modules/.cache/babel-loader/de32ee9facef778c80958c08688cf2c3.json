{"ast":null,"code":"var _jsxFileName = \"/Users/hasansharif/Desktop/Projects/react/counter-app/src/App.js\";\n\n/* eslint-disable no-unused-vars */\nimport React, { Component } from 'react';\nimport Counters from './components/counters';\nimport Navbar from './components/navbar';\nimport { getCategories } from \"./data/fakeCategoryList\";\nimport { getFishes, getWeight } from \"./data/fakeFishList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      headers: [{\n        id: 1,\n        category: getCategories(),\n        value: 9\n      }],\n      counter: [{\n        id: 1,\n        value: 20,\n        capacity: 0\n      }],\n      tables: [{\n        id: 1,\n        value: 5,\n        totalWeight: getWeight,\n        count: getFishes()\n      }],\n      cards: [{\n        id: 1,\n        name: \"Ilish 2kg\"\n      }, {\n        id: 2,\n        name: \"Shutki 5kg\"\n      }]\n    };\n\n    this.incrementHandler = c => {\n      const counter = [...this.state.counter];\n      const index = counter.indexOf(counter);\n      counter[index] = { ...counter\n      };\n      counter[index].capacity++;\n      this.setState({\n        counter\n      });\n    };\n\n    this.deleteHandler = cardID => {\n      // if(this.fish === undefined) {return} //catcher to handle error\n      const cards = this.state.cards.filter(c => c.id !== cardID);\n      this.setState({\n        cards\n      }); // if (this.setState({cartCount: this.state.cartCount - 1})) return 0;\n    };\n\n    this.resetHandler = () => {\n      const counter = this.state.counter.map(c => {\n        c.capacity = 0;\n        return c;\n      });\n      this.setState({\n        counter\n      });\n    };\n  }\n\n  render() {\n    const {\n      length: count\n    } = this.state.tables;\n    return (\n      /*#__PURE__*/\n      //here Counter comp will need to render  \n      _jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"main\", {\n          children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Counters, {\n            headers: this.state.headers,\n            counter: this.state.counter,\n            tables: this.state.tables,\n            cards: this.state.cards\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this)\n    );\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/Users/hasansharif/Desktop/Projects/react/counter-app/src/App.js"],"names":["React","Component","Counters","Navbar","getCategories","getFishes","getWeight","App","state","headers","id","category","value","counter","capacity","tables","totalWeight","count","cards","name","incrementHandler","c","index","indexOf","setState","deleteHandler","cardID","filter","resetHandler","map","render","length"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { Component } from 'react';\nimport Counters from './components/counters';\nimport Navbar from './components/navbar';\nimport { getCategories } from \"./data/fakeCategoryList\";\nimport { getFishes, getWeight } from \"./data/fakeFishList\";\n\nexport class App extends Component{\n  \n  state = {\n    headers: [\n        {\n            id:1, \n            category: getCategories(), \n            value: 9\n        }\n    ],\n\n    counter: [\n        {\n          id:1,\n          value: 20,\n          capacity: 0\n        }\n    ],\n\n    tables: [\n        {\n            id: 1, \n            value: 5,\n            totalWeight: getWeight,\n            count: getFishes()\n        }\n    ],\n\n    cards: [\n        {id: 1, name: \"Ilish 2kg\"},\n        {id: 2, name: \"Shutki 5kg\"}\n    ]\n};\n\n// increment/increase qty method \nincrementHandler = c => {\n    const counter = [...this.state.counter];\n    const index = counter.indexOf(counter);\n    counter[index] = { ...counter };\n    counter[index].capacity++;\n    this.setState({ counter });\n};\n\n// delete/increment item method \ndeleteHandler = (cardID) => {\n    // if(this.fish === undefined) {return} //catcher to handle error\n    const cards = this.state.cards.filter(c => c.id !== cardID);\n    this.setState({ cards });\n    // if (this.setState({cartCount: this.state.cartCount - 1})) return 0;\n};\n\n// undo/reset method \nresetHandler = () => {\n    const counter = this.state.counter.map(c => {\n        c.capacity = 0;\n        return c;\n    });\n   \n    this.setState({ counter });\n}\n\n\n  render(){\n    const {length: count} = this.state.tables;\n    \n    return (//here Counter comp will need to render  \n      \n      <React.Fragment>\n        \n        <main>\n        <Navbar/>\n          <Counters \n          headers={this.state.headers}\n          counter={this.state.counter}\n          tables={this.state.tables}\n          cards={this.state.cards} />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}