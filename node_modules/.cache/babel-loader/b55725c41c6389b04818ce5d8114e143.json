{"ast":null,"code":"var _jsxFileName = \"/Users/hasansharif/Desktop/Projects/react/counter-app/src/App.js\";\n\n/* eslint-disable no-useless-constructor */\n\n/* eslint-disable no-unused-vars */\nimport React, { Component } from 'react';\nimport Counters from './components/counters';\nimport Navbar from './components/navbar';\nimport { getCategories } from \"./data/fakeCategoryList\";\nimport { getFishes, getWeight } from \"./data/fakeFishList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      headers: [{\n        id: 1,\n        category: getCategories(),\n        value: 9\n      }],\n      counter: [{\n        id: 1,\n        capacity: 5\n      }, {\n        id: 2,\n        capacity: 10\n      }, {\n        id: 3,\n        capacity: 20\n      }],\n      tables: [{\n        id: 1,\n        value: 5,\n        totalWeight: getWeight,\n        count: getFishes()\n      }],\n      cards: [{\n        id: 1,\n        name: \"Ilish 2kg\"\n      }, {\n        id: 2,\n        name: \"Shutki 5kg\"\n      }]\n    };\n\n    this.incrementHandler = c => {\n      const counter = [...this.state.counter];\n      const index = counter.indexOf(c);\n      counter[index] = { ...c\n      };\n      counter[index].capacity++;\n      this.setState({\n        counter\n      });\n    };\n\n    this.deleteHandler = cardID => {\n      // if(this.fish === undefined) {return} //catcher to handle error\n      const cards = this.state.cards.filter(c => c.id !== cardID);\n      this.setState({\n        cards\n      }); // if (this.setState({cartCount: this.state.cartCount - 1})) return 0;\n    };\n\n    this.resetHandler = () => {\n      const counter = this.state.counter.map(c => {\n        c.capacity = 0;\n        return c;\n      });\n      this.setState({\n        counter\n      });\n    };\n\n    this.getCounterLength = () => {\n      const {\n        length: count\n      } = this.state.counter;\n      return count;\n    };\n  } //life-cycle hooks can be used in only class comp\n  //this is the right method to make ajax call to get data\n\n\n  componentDidMount() {} // increment/increase qty method \n\n\n  render() {\n    return (\n      /*#__PURE__*/\n      //here Counter comp will need to render  \n      _jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {\n          count: this.getCounterLength()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(Counters, {\n            headers: this.state.headers,\n            counter: this.state.counter,\n            tables: this.state.tables,\n            cards: this.state.cards,\n            onIncrement: this.incrementHandler,\n            onDelete: this.deleteHandler,\n            onReset: this.resetHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }, this)\n    );\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/Users/hasansharif/Desktop/Projects/react/counter-app/src/App.js"],"names":["React","Component","Counters","Navbar","getCategories","getFishes","getWeight","App","constructor","state","headers","id","category","value","counter","capacity","tables","totalWeight","count","cards","name","incrementHandler","c","index","indexOf","setState","deleteHandler","cardID","filter","resetHandler","map","getCounterLength","length","componentDidMount","render"],"mappings":"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","sourcesContent":["/* eslint-disable no-useless-constructor */\n/* eslint-disable no-unused-vars */\nimport React, { Component } from 'react';\nimport Counters from './components/counters';\nimport Navbar from './components/navbar';\nimport { getCategories } from \"./data/fakeCategoryList\";\nimport { getFishes, getWeight } from \"./data/fakeFishList\";\n\nexport class App extends Component{\n  \n  state = {\n    headers: [\n        {\n            id:1, \n            category: getCategories(), \n            value: 9\n        }\n    ],\n\n    counter: [\n        {\n          id:1,\n          capacity: 5\n        },\n\n        {\n          id:2,\n          capacity: 10\n        },\n\n        {\n          id:3,\n          capacity: 20\n        }\n    ],\n\n    tables: [\n        {\n            id: 1, \n            value: 5,\n            totalWeight: getWeight,\n            count: getFishes()\n        }\n    ],\n\n    cards: [\n        {id: 1, name: \"Ilish 2kg\"},\n        {id: 2, name: \"Shutki 5kg\"}\n    ]\n};\n\nconstructor(){\n  super();\n  \n}\n//life-cycle hooks can be used in only class comp\n//this is the right method to make ajax call to get data\ncomponentDidMount(){\n  \n}\n\n// increment/increase qty method \nincrementHandler = c => {\n    const counter = [...this.state.counter];\n    const index = counter.indexOf(c);\n    counter[index] = { ...c };\n    counter[index].capacity++;\n    this.setState({ counter });\n};\n\n// delete/increment item method \ndeleteHandler = (cardID) => {\n    // if(this.fish === undefined) {return} //catcher to handle error\n    const cards = this.state.cards.filter(c => c.id !== cardID);\n    this.setState({ cards });\n    // if (this.setState({cartCount: this.state.cartCount - 1})) return 0;\n};\n\n// undo/reset method \nresetHandler = () => {\n    const counter = this.state.counter.map(c => {\n        c.capacity = 0;\n        return c;\n    });\n   \n    this.setState({ counter });\n}\n\n//get counter length\ngetCounterLength = () => {\n  const {length: count} = this.state.counter;\n  return count;\n}\n\n  render(){\n \n    return (//here Counter comp will need to render  \n      \n      <React.Fragment>\n        <Navbar count={this.getCounterLength()}/>\n        \n        <main className=\"container\">\n          <Counters \n            headers={this.state.headers}\n            counter={this.state.counter}\n            tables={this.state.tables}\n            cards={this.state.cards}\n            onIncrement={this.incrementHandler}\n            onDelete={this.deleteHandler}\n            onReset={this.resetHandler} />\n        </main>\n        \n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}