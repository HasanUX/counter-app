{"ast":null,"code":"import _classCallCheck from\"/Users/hasansharif/Desktop/Projects/react/counter-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/hasansharif/Desktop/Projects/react/counter-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/hasansharif/Desktop/Projects/react/counter-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/hasansharif/Desktop/Projects/react/counter-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/* eslint-disable no-unused-vars */import React from'react';import Card from'./cards';import Counter from'./counter';import Header from'./header';import Reviews from'./reviews';import Tables from'./table';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Counters=/*#__PURE__*/function(_React$Component){_inherits(Counters,_React$Component);var _super=_createSuper(Counters);function Counters(){_classCallCheck(this,Counters);return _super.apply(this,arguments);}_createClass(Counters,[{key:\"componentDidUpdate\",value://with this method, we can decide whether or not we should make a ajax call.\n//if (prevProps.counter.value !== this.props.counter.value){\n//Ajax call and get new data from the server}\nfunction componentDidUpdate(prevProps,prevState){}//with this method, we can clean dom whenever a listener work is done\n//otherwise there will be memoryleaks\n},{key:\"componentWillUnmount\",value:function componentWillUnmount(){}},{key:\"render\",value:function render(){var _this=this;// simplifying references using obj destructuring\nvar _this$props=this.props,headers=_this$props.headers,counter=_this$props.counter,cards=_this$props.cards,tables=_this$props.tables,onIncrement=_this$props.onIncrement,onDelete=_this$props.onDelete,onReset=_this$props.onReset;return/*#__PURE__*/_jsxs(\"div\",{className:\"container mt-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"header-type-div mb-4\",children:headers.map(function(header){return/*#__PURE__*/_jsx(Header,{header:header//will receive all state values\n,category:_this.getCategories},header.id);})}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-start\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"counters-div mr-5\",children:[counter.map(function(counter){return/*#__PURE__*/_jsx(Counter,{counter:counter,onIncrement:_this.props.onIncrement,onDelete:_this.props.onDelete,onReset:_this.props.onReset},counter.id);}),/*#__PURE__*/_jsx(\"div\",{className:\"reset-div\",children:/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-sm btn-dark\",onClick:this.props.onReset,children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-undo\"}),\" Reset capacity\"]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"card-div\",children:this.props.cards.map(function(card){return/*#__PURE__*/_jsx(Card,{card:card,onDelete:_this.props.onDelete},card.id);})//prop inserted, declated in cards.js\n}),/*#__PURE__*/_jsx(\"div\",{className:\"table-div\",children:this.props.tables.map(function(table){return/*#__PURE__*/_jsx(Tables,{tables:table,onDelete:_this.props.onDelete},table.id);})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"review-div\",children:/*#__PURE__*/_jsx(Reviews,{})})]});}}]);return Counters;}(React.Component);export default Counters;","map":{"version":3,"sources":["/Users/hasansharif/Desktop/Projects/react/counter-app/src/components/counters.js"],"names":["React","Card","Counter","Header","Reviews","Tables","Counters","prevProps","prevState","props","headers","counter","cards","tables","onIncrement","onDelete","onReset","map","header","getCategories","id","card","table","Component"],"mappings":"ghBAAA,mCACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,SAAjB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,SAAnB,C,2FAEMC,CAAAA,Q,+PAEF;AACA;AACA;AACA,4BAAmBC,SAAnB,CAA8BC,SAA9B,CAAwC,CAEvC,CAED;AACA;oCACA,+BAAsB,CAErB,C,sBAED,iBAAS,gBAEL;AACA,gBAA0E,KAAKC,KAA/E,CAAOC,OAAP,aAAOA,OAAP,CAAgBC,OAAhB,aAAgBA,OAAhB,CAAyBC,KAAzB,aAAyBA,KAAzB,CAAgCC,MAAhC,aAAgCA,MAAhC,CAAwCC,WAAxC,aAAwCA,WAAxC,CAAqDC,QAArD,aAAqDA,QAArD,CAA+DC,OAA/D,aAA+DA,OAA/D,CAEA,mBAEA,aAAK,SAAS,CAAC,gBAAf,wBAEQ,YAAK,SAAS,CAAC,sBAAf,UACKN,OAAO,CAACO,GAAR,CAAY,SAAAC,MAAM,qBACnB,KAAC,MAAD,EACA,MAAM,CAAEA,MAAQ;AADhB,CAEA,QAAQ,CAAI,KAAI,CAACC,aAFjB,EAAaD,MAAM,CAACE,EAApB,CADmB,EAAlB,CADL,EAFR,cASQ,aAAK,SAAS,CAAC,8BAAf,wBAEQ,aAAK,SAAS,CAAC,mBAAf,WACKT,OAAO,CAACM,GAAR,CAAY,SAAAN,OAAO,qBACpB,KAAC,OAAD,EACA,OAAO,CAAEA,OADT,CAEA,WAAW,CAAE,KAAI,CAACF,KAAL,CAAWK,WAFxB,CAGA,QAAQ,CAAE,KAAI,CAACL,KAAL,CAAWM,QAHrB,CAIA,OAAO,CAAE,KAAI,CAACN,KAAL,CAAWO,OAJpB,EAAcL,OAAO,CAACS,EAAtB,CADoB,EAAnB,CADL,cAUI,YAAK,SAAS,CAAC,WAAf,uBACI,gBAAQ,SAAS,CAAC,qBAAlB,CACI,OAAO,CAAG,KAAKX,KAAL,CAAWO,OADzB,wBAEI,UAAG,SAAS,CAAC,YAAb,EAFJ,qBADJ,EAVJ,GAFR,cAoBQ,YAAK,SAAS,CAAC,UAAf,UAEK,KAAKP,KAAL,CAAWG,KAAX,CAAiBK,GAAjB,CAAqB,SAAAI,IAAI,qBAC1B,KAAC,IAAD,EACA,IAAI,CAAEA,IADN,CAEA,QAAQ,CAAE,KAAI,CAACZ,KAAL,CAAWM,QAFrB,EAAWM,IAAI,CAACD,EAAhB,CAD0B,EAAzB,CAGiC;AALtC,EApBR,cA6BQ,YAAK,SAAS,CAAC,WAAf,UACK,KAAKX,KAAL,CAAWI,MAAX,CAAkBI,GAAlB,CAAsB,SAAAK,KAAK,qBAC5B,KAAC,MAAD,EACA,MAAM,CAAEA,KADR,CAEA,QAAQ,CAAE,KAAI,CAACb,KAAL,CAAWM,QAFrB,EAAaO,KAAK,CAACF,EAAnB,CAD4B,EAA3B,CADL,EA7BR,GATR,cA8CQ,YAAK,SAAS,CAAC,YAAf,uBACI,KAAC,OAAD,IADJ,EA9CR,GAFA,CAwDH,C,sBA5EkBpB,KAAK,CAACuB,S,EA+E7B,cAAejB,CAAAA,QAAf","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport Card from './cards';\nimport Counter from './counter';\nimport Header from './header';\nimport Reviews from './reviews';\nimport Tables from './table';\n\nclass Counters extends React.Component {\n    \n    //with this method, we can decide whether or not we should make a ajax call.\n    //if (prevProps.counter.value !== this.props.counter.value){\n    //Ajax call and get new data from the server}\n    componentDidUpdate(prevProps, prevState){\n        \n    }\n\n    //with this method, we can clean dom whenever a listener work is done\n    //otherwise there will be memoryleaks\n    componentWillUnmount(){\n\n    }\n\n    render() {\n\n        // simplifying references using obj destructuring\n        const {headers, counter, cards, tables, onIncrement, onDelete, onReset} = this.props;\n\n        return (\n            \n        <div className=\"container mt-4\"> \n\n                <div className=\"header-type-div mb-4\">\n                    {headers.map(header => \n                    <Header key={header.id} \n                    header={header} //will receive all state values\n                    category = {this.getCategories}/>)}                \n                </div>  \n\n                <div className=\"d-flex justify-content-start\">\n                   \n                        <div className=\"counters-div mr-5\">\n                            {counter.map(counter => \n                            <Counter key={counter.id}\n                            counter={counter}\n                            onIncrement={this.props.onIncrement}\n                            onDelete={this.props.onDelete}\n                            onReset={this.props.onReset}\n                            /> )}\n                         \n                        \n                            <div className=\"reset-div\">\n                                <button className=\"btn btn-sm btn-dark\" \n                                    onClick= {this.props.onReset}> \n                                    <i className=\"fa fa-undo\"></i> Reset capacity\n                                </button>\n                            </div>\n                        </div>      \n\n                        <div className=\"card-div\">\n                           \n                            {this.props.cards.map(card => \n                            <Card key={card.id} \n                            card={card}\n                            onDelete={this.props.onDelete}/>) //prop inserted, declated in cards.js\n                            }\n                        </div>\n\n                        <div className=\"table-div\">\n                            {this.props.tables.map(table => \n                            <Tables key={table.id} \n                            tables={table}\n                            onDelete={this.props.onDelete}/>)}\n                        </div> \n                </div>                \n\n                <div className=\"review-div\">\n                    <Reviews />\n                </div>\n\n                \n\n        </div>     \n        );\n    }\n}\n \nexport default Counters;"]},"metadata":{},"sourceType":"module"}