{"ast":null,"code":"/* eslint-disable no-unused-vars */\nimport * as categoriesAPI from \"./fakeCategoryList\";\nconst fishes = [{\n  fishID: \"5b21ca3eeb7f6fbccd471809\",\n  title: \"Coral\",\n  category: {\n    fishID: \"5b21ca3eeb7f6fbccd471820\",\n    name: \"Sea\"\n  },\n  quantity: 0,\n  price: 500,\n  netWeight: 4\n}, {\n  fishID: \"5b21ca3eeb7f6fbccd471810\",\n  title: \"Rupchada\",\n  category: {\n    fishID: \"5b21ca3eeb7f6fbccd471822\",\n    name: \"Deshi\"\n  },\n  quantity: 0,\n  price: 1000,\n  netWeight: 3\n}];\nexport function getFishes() {\n  return fishes;\n}\nexport const getWeight = Object.values(fishes).reduce((w, {\n  netWeight\n}) => w + netWeight, 0);\nexport const getSubTotal = Object.values(fishes).reduce((p, w, {\n  price\n}, {\n  netWeight\n}) => price * netWeight, 0);\nconsole.log(getSubTotal);\nexport function getPrice() {\n  let price = fishes.map(p => p.price);\n  return price;\n} // //lets sum the grand total price\n// export function getGrandTotal(){\n//     let price = fishes.map(st => st.price);\n//     const totalPrice =  price.reduce((previousValue, currentValue) => {\n//         return previousValue+currentValue; \n//     }, 0);\n//     return totalPrice;\n// }\n\nexport function getFish(id) {\n  return fishes.find(f => f.fishID === id);\n}\nexport function saveFish(fish) {\n  let fishInDb = fishes.find(f => f.fishID === fish.fishID) || {};\n  fishInDb.name = fish.name;\n  fishInDb.category = categoriesAPI.categories.find(f => f.fishID === fish.categoryId);\n  fishInDb.quantity = fish.quantity;\n  fishInDb.price = fish.price;\n\n  if (!fishInDb.fishID) {\n    fishInDb.fishID = Date.now();\n    fishes.push(fishInDb);\n  }\n\n  return fishInDb;\n}\nexport function deleteFish(id) {\n  let fishInDb = fishes.find(f => f.fishID === id);\n  fishes.splice(fishes.indexOf(fishInDb), 1);\n  return fishInDb;\n}","map":{"version":3,"sources":["/Users/hasansharif/Desktop/Projects/react/counter-app/src/data/fakeFishList.js"],"names":["categoriesAPI","fishes","fishID","title","category","name","quantity","price","netWeight","getFishes","getWeight","Object","values","reduce","w","getSubTotal","p","console","log","getPrice","map","getFish","id","find","f","saveFish","fish","fishInDb","categories","categoryId","Date","now","push","deleteFish","splice","indexOf"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport * as categoriesAPI from \"./fakeCategoryList\";\n\n\nconst fishes = [\n    {\n        fishID: \"5b21ca3eeb7f6fbccd471809\",\n        title: \"Coral\",\n        category:  { fishID: \"5b21ca3eeb7f6fbccd471820\", name: \"Sea\" },\n        quantity: 0,\n        price: 500,\n        netWeight: 4\n    },\n\n    {\n        fishID: \"5b21ca3eeb7f6fbccd471810\",\n        title: \"Rupchada\",\n        category:  { fishID: \"5b21ca3eeb7f6fbccd471822\", name: \"Deshi\" },\n        quantity: 0,\n        price: 1000,\n        netWeight: 3\n    }\n];\n\n\n\nexport function getFishes(){\n    return fishes;\n}\n\n\nexport const getWeight = Object.values(fishes).reduce((w, { netWeight }) => w + netWeight, 0);\nexport const getSubTotal = Object.values(fishes).reduce((p, w, { price },{netWeight }) => price * netWeight, 0);\nconsole.log(getSubTotal);\n\n\n\nexport function getPrice(){\n    let price = fishes.map(p => p.price);\n    return price;\n}\n\n\n// //lets sum the grand total price\n// export function getGrandTotal(){\n//     let price = fishes.map(st => st.price);\n//     const totalPrice =  price.reduce((previousValue, currentValue) => {\n//         return previousValue+currentValue; \n//     }, 0);\n//     return totalPrice;\n// }\n\nexport function getFish(id){\n    return fishes.find(f => f.fishID === id);\n}\n\nexport function saveFish(fish){\n    let fishInDb = fishes.find(f => f.fishID === fish.fishID) || {};\n    fishInDb.name = fish.name;\n    fishInDb.category = categoriesAPI.categories.find(f => f.fishID === fish.categoryId);\n    fishInDb.quantity = fish.quantity;\n    fishInDb.price = fish.price;\n\n    if (!fishInDb.fishID){\n        fishInDb.fishID = Date.now();\n        fishes.push(fishInDb);\n    }\n\n    return fishInDb;\n}\n\nexport function deleteFish(id){\n    let fishInDb = fishes.find(f => f.fishID === id);\n    fishes.splice(fishes.indexOf(fishInDb), 1);\n    return fishInDb;\n}"]},"metadata":{},"sourceType":"module"}