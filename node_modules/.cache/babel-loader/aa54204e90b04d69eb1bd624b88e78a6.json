{"ast":null,"code":"var _jsxFileName = \"/Users/hasansharif/Desktop/Projects/react/counter-app/src/App.js\";\n\n/* eslint-disable no-unused-vars */\nimport React, { Component } from 'react';\nimport Counters from './components/counters';\nimport Navbar from './components/navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      headers: [{\n        id: 1,\n        category: getCategories(),\n        value: 9\n      }],\n      counters: [{\n        id: 1,\n        value: 5,\n        capacity: 0\n      }],\n      cards: [{\n        id: 1,\n        name: \"Ilish 2kg\"\n      }, {\n        id: 2,\n        name: \"Shutki 5kg\"\n      }]\n    };\n\n    this.incrementHandler = counter => {\n      const counters = [...this.state.counters];\n      const index = counters.indexOf(counter);\n      counters[index] = { ...counter\n      };\n      counters[index].capacity++;\n      this.setState({\n        counters\n      });\n    };\n\n    this.deleteHandler = cardID => {\n      // if(this.fish === undefined) {return} //catcher to handle error\n      const cards = this.state.cards.filter(c => c.id !== cardID);\n      this.setState({\n        cards\n      });\n      console.log(\"clicked to \", cardID); // if (this.setState({cartCount: this.state.cartCount - 1})) return 0;\n    };\n\n    this.handleReset = () => {\n      const counters = this.state.counters.map(c => {\n        c.capacity = 0;\n        return c;\n      });\n      this.setState({\n        counters\n      });\n    };\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      //here Counter comp will need to render  \n      _jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          children: /*#__PURE__*/_jsxDEV(Counters, {\n            onIncreament: this.incrementHandler,\n            onDelete: this.deleteHandler,\n            onReset: this.handleReset\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this)\n    );\n  }\n\n}","map":{"version":3,"sources":["/Users/hasansharif/Desktop/Projects/react/counter-app/src/App.js"],"names":["React","Component","Counters","Navbar","App","state","headers","id","category","getCategories","value","counters","capacity","cards","name","incrementHandler","counter","index","indexOf","setState","deleteHandler","cardID","filter","c","console","log","handleReset","map","render"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA2B;AAAA;AAAA;AAAA,SAGzBI,KAHyB,GAGjB;AACNC,MAAAA,OAAO,EAAE,CACL;AACIC,QAAAA,EAAE,EAAC,CADP;AAEIC,QAAAA,QAAQ,EAAEC,aAAa,EAF3B;AAGIC,QAAAA,KAAK,EAAE;AAHX,OADK,CADH;AASNC,MAAAA,QAAQ,EAAE,CACN;AAACJ,QAAAA,EAAE,EAAE,CAAL;AAAQG,QAAAA,KAAK,EAAE,CAAf;AAAkBE,QAAAA,QAAQ,EAAE;AAA5B,OADM,CATJ;AAaNC,MAAAA,KAAK,EAAE,CACH;AAACN,QAAAA,EAAE,EAAE,CAAL;AAAQO,QAAAA,IAAI,EAAE;AAAd,OADG,EAEH;AAACP,QAAAA,EAAE,EAAE,CAAL;AAAQO,QAAAA,IAAI,EAAE;AAAd,OAFG;AAbD,KAHiB;;AAAA,SAuB3BC,gBAvB2B,GAuBRC,OAAO,IAAI;AAC1B,YAAML,QAAQ,GAAG,CAAC,GAAG,KAAKN,KAAL,CAAWM,QAAf,CAAjB;AACA,YAAMM,KAAK,GAAGN,QAAQ,CAACO,OAAT,CAAiBF,OAAjB,CAAd;AACAL,MAAAA,QAAQ,CAACM,KAAD,CAAR,GAAkB,EAAE,GAAGD;AAAL,OAAlB;AACAL,MAAAA,QAAQ,CAACM,KAAD,CAAR,CAAgBL,QAAhB;AACA,WAAKO,QAAL,CAAc;AAAER,QAAAA;AAAF,OAAd;AACH,KA7B0B;;AAAA,SAgC3BS,aAhC2B,GAgCVC,MAAD,IAAY;AACxB;AACA,YAAMR,KAAK,GAAG,KAAKR,KAAL,CAAWQ,KAAX,CAAiBS,MAAjB,CAAwBC,CAAC,IAAIA,CAAC,CAAChB,EAAF,KAASc,MAAtC,CAAd;AACA,WAAKF,QAAL,CAAc;AAAEN,QAAAA;AAAF,OAAd;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BJ,MAA3B,EAJwB,CAKxB;AACH,KAtC0B;;AAAA,SAyC3BK,WAzC2B,GAyCb,MAAM;AAChB,YAAMf,QAAQ,GAAG,KAAKN,KAAL,CAAWM,QAAX,CAAoBgB,GAApB,CAAwBJ,CAAC,IAAI;AAC1CA,QAAAA,CAAC,CAACX,QAAF,GAAa,CAAb;AACA,eAAOW,CAAP;AACH,OAHgB,CAAjB;AAKA,WAAKJ,QAAL,CAAc;AAAER,QAAAA;AAAF,OAAd;AACH,KAhD0B;AAAA;;AAmDzBiB,EAAAA,MAAM,GAAE;AACN;AAAA;AAAQ;AAEN,cAAC,KAAD,CAAO,QAAP;AAAA,gCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,iCACE,QAAC,QAAD;AACA,YAAA,YAAY,EAAE,KAAKb,gBADnB;AAEA,YAAA,QAAQ,EAAE,KAAKK,aAFf;AAGA,YAAA,OAAO,EAAE,KAAKM;AAHd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAYD;;AAhEwB","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { Component } from 'react';\nimport Counters from './components/counters';\nimport Navbar from './components/navbar';\n\nclass App extends Component{\n  \n\n  state = {\n    headers: [\n        {\n            id:1, \n            category: getCategories(), \n            value: 9\n        }\n    ],\n\n    counters: [\n        {id: 1, value: 5, capacity: 0}\n    ],\n\n    cards: [\n        {id: 1, name: \"Ilish 2kg\"},\n        {id: 2, name: \"Shutki 5kg\"}\n    ]\n};\n\n// increment/increase qty method \nincrementHandler = counter => {\n    const counters = [...this.state.counters];\n    const index = counters.indexOf(counter);\n    counters[index] = { ...counter };\n    counters[index].capacity++;\n    this.setState({ counters });\n};\n\n// delete/increment item method \ndeleteHandler = (cardID) => {\n    // if(this.fish === undefined) {return} //catcher to handle error\n    const cards = this.state.cards.filter(c => c.id !== cardID);\n    this.setState({ cards });\n    console.log(\"clicked to \", cardID);\n    // if (this.setState({cartCount: this.state.cartCount - 1})) return 0;\n};\n\n// undo/reset method \nhandleReset = () => {\n    const counters = this.state.counters.map(c => {\n        c.capacity = 0;\n        return c;\n    });\n   \n    this.setState({ counters });\n}\n\n\n  render(){\n    return (//here Counter comp will need to render  \n      \n      <React.Fragment>\n        <Navbar />\n        <main>\n          <Counters \n          onIncreament={this.incrementHandler}\n          onDelete={this.deleteHandler}\n          onReset={this.handleReset} />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}