{"ast":null,"code":"var _jsxFileName = \"/Users/hasansharif/Desktop/Projects/react/counter-app/src/components/counter.js\";\n\n/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport { getFishes, getWeight } from \"../data/fakeFishList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cartCount: 0,\n      fishes: getFishes(),\n      totalWeight: getWeight,\n      increaseWeight: weight => {\n        this.setState({\n          netWeight: this.fishes.netWeight + 1\n        }); //eventHandler for the increment btn\n        //binding a func using arrow func so that we don't need to create constructor\n        //setState is a built-in method to notify react that state prop value is gonna be changed\n        //react will then schedule a async call to the render(), i,e this is going to be happened in the future\n      }\n    };\n    this.styles = {\n      borderRadius: \"50%\",\n      marginRight: \"15px\"\n    };\n\n    this.decrementHandler = fish => {\n      // if(this.fish === undefined) {return} //catcher to handle error\n      const fishes = this.state.fishes.filter(f => f.fishID !== fish.fishID);\n      this.setState({\n        fishes\n      }); // if (this.setState({cartCount: this.state.cartCount - 1})) return 0;\n    };\n  }\n\n  render() {\n    const {\n      length: count\n    } = this.state.fishes;\n    return (\n      /*#__PURE__*/\n      //react element starts\n      //we can add <React.Fragment> instead of <div></div> if we don't want this blank div\n      _jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-7 col-12 mt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"mb-4\",\n              children: [\"Your cart has \", count, \" item(s)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped border\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 50,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Weight(kg)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 52,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Unit Price\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 53,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Sub\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [this.state.fishes.map(fish => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: fish.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: fish.category.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: fish.netWeight\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: fish.price\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: fish.netWeight * fish.price\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => this.setState(fish.netWeight + 1),\n                      className: \"btn btn-sm btn-warning\",\n                      children: \"+\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 68,\n                      columnNumber: 42\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => this.decrementHandler(fish),\n                      className: \"btn btn-sm btn-danger\",\n                      children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"fa fa-trash\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 69,\n                        columnNumber: 129\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 69,\n                      columnNumber: 42\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 37\n                  }, this)]\n                }, fish.fishID, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 33\n                }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"Total weight:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: this.state.totalWeight\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"Grand Total:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)\n    );\n  }\n\n  counteWeight() {\n    const {\n      netWeight\n    } = this.state; //destructuring happens\n\n    const emptySpan = \"0\";\n    return netWeight === 0 ? emptySpan : netWeight;\n  } //lets get the sub total price\n  // getSubTotal(){\n  //     let price = this.fish.netWeight * this.fish.price;\n  //     const totalPrice =  this.price.reduce((previousValue, currentValue) => {\n  //         return previousValue+currentValue; \n  //     }, 0);\n  //     return totalPrice;\n  // }\n  //lets get the grand total\n  // export const getGrandTotal = Object.values(fishes).reduce((w, { netWeight }) => w , 0);\n  //map() - categories\n\n\n  categoryMap() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.categories.map(elem => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-light border shadow mb-2 mr-4\",\n        children: [\" \", elem.name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 56\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 16\n    }, this);\n  } //map() - tags\n  // tagMap(){\n  //     const incrementBtn = \n  //     <div className=\"text-right\"> \n  //         <button onClick={() => this.incrementHandler(this.product)} className=\"btn btn-sm btn-warning mr-2\">+</button> \n  //         <button className=\"btn btn-sm btn-danger\"> <i className=\"fa fa-trash\"></i></button> \n  //     </div>;\n  //     const tagMapper = this.state.fishes.map(fish => \n  //         <li key={fish} className=\"card p-3 mb-2\"> {fish} {incrementBtn}</li>);\n  //         return tagMapper;\n  // }\n\n\n  btnDanger() {\n    return this.state.cartCount === 0 ? 'btn btn-lg btn-danger shadow text-white' : 'btn btn-lg btn-success shadow text-white';\n  }\n\n  formatCount() {\n    const {\n      cartCount\n    } = this.state; //destructuring happens\n\n    const emptySpan = /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"badge badge-light\",\n      children: \"Empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 27\n    }, this);\n\n    return cartCount === 0 ? emptySpan : cartCount;\n  }\n\n}\n\nexport default Counter; // between div tag, is a jsx expression which gets compiled to React.createElement()\n// between {}, we can add js expression, func that produces,returns value","map":{"version":3,"sources":["/Users/hasansharif/Desktop/Projects/react/counter-app/src/components/counter.js"],"names":["React","getFishes","getWeight","Counter","Component","state","cartCount","fishes","totalWeight","increaseWeight","weight","setState","netWeight","styles","borderRadius","marginRight","decrementHandler","fish","filter","f","fishID","render","length","count","map","title","category","name","price","counteWeight","emptySpan","categoryMap","categories","elem","btnDanger","formatCount"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport { getFishes, getWeight } from \"../data/fakeFishList\";\n\n\nclass Counter extends React.Component {\n    state = {\n        cartCount: 0,\n        fishes: getFishes(),\n        totalWeight: getWeight,\n        increaseWeight: weight => {\n            this.setState({ netWeight: this.fishes.netWeight + 1 });\n            //eventHandler for the increment btn\n            //binding a func using arrow func so that we don't need to create constructor\n            //setState is a built-in method to notify react that state prop value is gonna be changed\n            //react will then schedule a async call to the render(), i,e this is going to be happened in the future\n        }\n        \n    };\n\n    styles = {\n        borderRadius: \"50%\",\n        marginRight: \"15px\"\n    };\n\n    decrementHandler = fish => {\n        // if(this.fish === undefined) {return} //catcher to handle error\n        const fishes = this.state.fishes.filter(f => f.fishID !== fish.fishID);\n        this.setState({ fishes });\n        // if (this.setState({cartCount: this.state.cartCount - 1})) return 0;\n    };\n\n    render(){ \n        const {length: count} = this.state.fishes;   \n        return (\n            //react element starts\n            //we can add <React.Fragment> instead of <div></div> if we don't want this blank div\n            \n            <div className=\"container\">\n                <div className=\"row\">\n                   \n                    {/* Products list */}\n                    <div className=\"col-md-7 col-12 mt-5\">\n                       \n                        <h4 className=\"mb-4\">Your cart has {count} item(s)</h4>\n\n                        <table className=\"table table-striped border\">\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th>Category</th>\n                                    <th>Weight(kg)</th>\n                                    <th>Unit Price</th>\n                                    <th>Sub</th>\n                                    <th></th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {this.state.fishes.map(fish => ( \n                                <tr key={fish.fishID}>\n                                    <td>{fish.title}</td>\n                                    <td>{fish.category.name}</td>\n                                    <td>{fish.netWeight}</td>\n                                    <td>{fish.price}</td>\n                                    <td>{fish.netWeight * fish.price}</td>\n                                    <td>{<button onClick={() => this.setState(fish.netWeight + 1)} className=\"btn btn-sm btn-warning\">+</button>}</td>\n                                    <td>{<button onClick={() => this.decrementHandler(fish)} className=\"btn btn-sm btn-danger\"> <i className=\"fa fa-trash\"></i></button>}</td>\n                                </tr>\n                                ))}\n\n                                <tr>\n                                    <td></td>\n                                    <td>Total weight:</td>\n                                    <td>{this.state.totalWeight}</td>\n                                    <td>Grand Total:</td>\n                                    <td>\n                                   \n                                    </td>\n                                    <td></td>\n                                    <td></td>\n                                  \n                                </tr>\n                               \n                            </tbody>\n                        </table>\n                    </div>\n\n\n                </div>\n            </div>\n        ); \n    }\n\n    counteWeight(){\n        const {netWeight} = this.state; //destructuring happens\n        const emptySpan = \"0\";\n        return netWeight === 0 ? emptySpan : netWeight;\n    }\n\n\n     \n    //lets get the sub total price\n    // getSubTotal(){\n    //     let price = this.fish.netWeight * this.fish.price;\n    //     const totalPrice =  this.price.reduce((previousValue, currentValue) => {\n    //         return previousValue+currentValue; \n    //     }, 0);\n    //     return totalPrice;\n    // }\n\n\n    //lets get the grand total\n\n    // export const getGrandTotal = Object.values(fishes).reduce((w, { netWeight }) => w , 0);\n    \n    //map() - categories\n    categoryMap(){\n        return <div>{this.state.categories.map(elem => <button className=\"btn btn-light border shadow mb-2 mr-4\"> {elem.name} </button>)}</div>     \n    }\n    \n    //map() - tags\n    // tagMap(){\n    \n    //     const incrementBtn = \n    //     <div className=\"text-right\"> \n    //         <button onClick={() => this.incrementHandler(this.product)} className=\"btn btn-sm btn-warning mr-2\">+</button> \n    //         <button className=\"btn btn-sm btn-danger\"> <i className=\"fa fa-trash\"></i></button> \n    //     </div>;\n\n    //     const tagMapper = this.state.fishes.map(fish => \n    //         <li key={fish} className=\"card p-3 mb-2\"> {fish} {incrementBtn}</li>);\n    //         return tagMapper;\n    // }\n\n    btnDanger(){\n        return this.state.cartCount===0 ? 'btn btn-lg btn-danger shadow text-white' \n        : 'btn btn-lg btn-success shadow text-white';\n    }\n\n    formatCount(){\n        const {cartCount} = this.state; //destructuring happens\n        const emptySpan = <span className=\"badge badge-light\">Empty</span>;\n        return cartCount === 0 ? emptySpan : cartCount;\n    }    \n}\n\n\n    \nexport default Counter;\n\n// between div tag, is a jsx expression which gets compiled to React.createElement()\n// between {}, we can add js expression, func that produces,returns value\n                   \n"]},"metadata":{},"sourceType":"module"}