{"ast":null,"code":"var _jsxFileName = \"/Users/hasansharif/Desktop/Projects/react/counter-app/src/components/counter.jsx\";\nimport React, { Component } from 'react';\nimport { getFishes } from '../data/fakeFishList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      mainTitle: \"Machbazaar.com\",\n      subTitle: \"Online fish selling platform.\",\n      imageUrl: \"https:/picsum.photos/90\",\n      cartCount: 0,\n      categories: ['Sea', 'Deshi', 'Shutki', 'Farm', 'Fishlet'],\n      tags: ['Rui Fish', 'Ilish Fish', 'Lobster Fish'],\n      reviews: ['Good one', 'Bad one', 'Satisfied', 'Loved it'],\n      fishes: getFishes()\n    };\n    this.styles = {\n      borderRadius: \"50%\",\n      marginRight: \"15px\"\n    };\n\n    this.incrementHandler = product => {\n      // console.log(product);\n      this.setState({\n        cartCount: this.state.cartCount + 1\n      }); //setState is a built-in method to notify react that state prop value is gonna be changed\n      //react will then schedule a async call to the render(), i,e this is going to be happened in the future\n    };\n\n    this.decrementHandler = product => {// if (this.setState({cartCount: this.state.cartCount - 1})) return 0;\n    };\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      //react element starts\n      //we can add <React.Fragment> instead of <div></div> if we don't want this blank div\n      _jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-9 col-12 mt-4 d-flex justify-content-start\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              style: this.styles,\n              className: \"border\",\n              src: this.state.imageUrl,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"font-weight-bold\",\n                children: this.state.mainTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: this.state.subTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-3 col-12 text-right mt-4\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              type: \"button\",\n              className: this.btnDanger(),\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-shopping-cart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 29\n              }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"badge badge-light\",\n                children: [this.formatCount(), \"  \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 mt-5 d-flex justify-content-start align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"mr-4\",\n              children: \"Categories\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 25\n            }, this), this.categoryMap()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 col-12 mt-5\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Stock\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Weight\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Price\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: this.state.fishes.map(fish => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: fish.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: fish.category\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: fish.numberInStock\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: fish.netWeight\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: fish.price\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => this.incrementHandler(this.product),\n                      className: \"btn btn-sm btn-warning\",\n                      children: \"+\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 82,\n                      columnNumber: 42\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-sm btn-danger\",\n                      children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"fa fa-trash\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 83,\n                        columnNumber: 85\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 83,\n                      columnNumber: 42\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 33\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 col-12 mt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Reviews\", this.state.reviews.length != 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\" (\", this.state.reviews.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 71\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 25\n            }, this), this.state.reviews.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"There are no reviews.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 61\n            }, this), this.reviewMap()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)\n    );\n  } //eventHandler for the increment btn\n  //binding a func using arrow func so that we don't need to create constructor\n\n\n  //conditional rendering for review list \n  //another conditional rendering is shown where the func is called using truthy,falsy\n  //key={} is required to assign unique key value to each list for backend integration\n  //another way of map() is showed\n  reviewMap() {\n    if (this.state.reviews.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please add reviews.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 53\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [this.state.reviews.map(reviewElem => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: reviewElem\n      }, reviewElem, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 58\n      }, this)), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 16\n    }, this);\n  } //map() - categories\n\n\n  categoryMap() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.categories.map(elem => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-light border shadow mb-2 mr-4\",\n        children: [\" \", elem, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 56\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 16\n    }, this);\n  } //map() - tags\n  // tagMap(){\n  //     const incrementBtn = \n  //     <div className=\"text-right\"> \n  //         <button onClick={() => this.incrementHandler(this.product)} className=\"btn btn-sm btn-warning mr-2\">+</button> \n  //         <button className=\"btn btn-sm btn-danger\"> <i className=\"fa fa-trash\"></i></button> \n  //     </div>;\n  //     const tagMapper = this.state.fishes.map(fish => \n  //         <li key={fish} className=\"card p-3 mb-2\"> {fish} {incrementBtn}</li>);\n  //         return tagMapper;\n  // }\n\n\n  btnDanger() {\n    return this.state.cartCount === 0 ? 'btn btn-lg btn-danger shadow text-white' : 'btn btn-lg btn-success shadow text-white';\n  }\n\n  formatCount() {\n    const {\n      cartCount\n    } = this.state; //destructuring happens\n\n    const emptySpan = /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"badge badge-light\",\n      children: \"Empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 27\n    }, this);\n\n    return cartCount === 0 ? emptySpan : cartCount;\n  }\n\n}\n\nexport default Counter; // between div tag, is a jsx expression which gets compiled to React.createElement()\n// between {}, we can add js expression, func that produces,returns value","map":{"version":3,"sources":["/Users/hasansharif/Desktop/Projects/react/counter-app/src/components/counter.jsx"],"names":["React","Component","getFishes","Counter","state","mainTitle","subTitle","imageUrl","cartCount","categories","tags","reviews","fishes","styles","borderRadius","marginRight","incrementHandler","product","setState","decrementHandler","render","btnDanger","formatCount","categoryMap","map","fish","title","category","numberInStock","netWeight","price","length","reviewMap","reviewElem","elem","emptySpan"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { getFishes } from '../data/fakeFishList';\n\n\nclass Counter extends React.Component {\n    state = {\n        mainTitle: \"Machbazaar.com\",\n        subTitle: \"Online fish selling platform.\",\n        imageUrl: \"https:/picsum.photos/90\",\n        cartCount: 0,\n        categories: ['Sea', 'Deshi', 'Shutki', 'Farm', 'Fishlet'],\n        tags: ['Rui Fish', 'Ilish Fish', 'Lobster Fish'],\n        reviews: ['Good one', 'Bad one', 'Satisfied', 'Loved it'],\n        \n        fishes: getFishes()\n    };\n\n    styles = {\n        borderRadius: \"50%\",\n        marginRight: \"15px\"\n    };\n\n\n    render(){ \n        return (\n            //react element starts\n            //we can add <React.Fragment> instead of <div></div> if we don't want this blank div\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-9 col-12 mt-4 d-flex justify-content-start\">\n                        <img style={this.styles} className=\"border\" src={this.state.imageUrl} alt=\"\"/> \n                        <div>\n                            <h1 className=\"font-weight-bold\">\n                                {this.state.mainTitle}\n                            </h1> \n                            <h4>{this.state.subTitle}</h4>\n                        </div>\n                    </div>\n\n                 \n                    \n                    <div className=\"col-md-3 col-12 text-right mt-4\">\n                        <a type=\"button\" className={this.btnDanger()}>\n                            <i className=\"fa fa-shopping-cart\"></i>&nbsp;&nbsp; \n                            <span className=\"badge badge-light\">{this.formatCount()}  </span>\n                        </a>  \n                    </div> \n\n                    <div className=\"col-12 mt-5 d-flex justify-content-start align-items-center\">\n                        <h3 className=\"mr-4\">Categories</h3>\n\n                        {this.categoryMap()}\n\n                    </div>\n\n                    {/* Products list */}\n                    <div className=\"col-md-6 col-12 mt-5\">\n                        {/* <ul>\n                            {this.tagMap()}\n                        </ul>  */}\n                        <table className=\"table\">\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th>Category</th>\n                                    <th>Stock</th>\n                                    <th>Weight</th>\n                                    <th>Price</th>\n                                    <th></th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {this.state.fishes.map(fish => ( \n                                <tr>\n                                    <td>{fish.title}</td>\n                                    <td>{fish.category}</td>\n                                    <td>{fish.numberInStock}</td>\n                                    <td>{fish.netWeight}</td>\n                                    <td>{fish.price}</td>\n                                    <td>{<button onClick={() => this.incrementHandler(this.product)} className=\"btn btn-sm btn-warning\">+</button>}</td>\n                                    <td>{<button className=\"btn btn-sm btn-danger\"> <i className=\"fa fa-trash\"></i></button>}</td>\n                                </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    </div>\n\n                    {/* Review list */}\n                    <div className=\"col-md-6 col-12 mt-5\">\n                        <h4>Reviews{this.state.reviews.length != 0 && <span> ({this.state.reviews.length})</span>}</h4>\n                        {/* truthy,falsy applied using && after condition which can be used to conditional render  */}\n                        {this.state.reviews.length === 0 && <p>There are no reviews.</p>}\n                        {this.reviewMap()}\n                    </div>\n\n                </div>\n            </div>\n        ); \n    }\n\n    //eventHandler for the increment btn\n    //binding a func using arrow func so that we don't need to create constructor\n    incrementHandler = product => {\n        // console.log(product);\n        this.setState({ cartCount: this.state.cartCount + 1 });\n        //setState is a built-in method to notify react that state prop value is gonna be changed\n        //react will then schedule a async call to the render(), i,e this is going to be happened in the future\n    }\n\n    decrementHandler = product => {\n        // if (this.setState({cartCount: this.state.cartCount - 1})) return 0;\n    }\n\n    //conditional rendering for review list \n    //another conditional rendering is shown where the func is called using truthy,falsy\n    //key={} is required to assign unique key value to each list for backend integration\n    //another way of map() is showed\n    reviewMap(){\n        if (this.state.reviews.length === 0) return <p>Please add reviews.</p>;\n        return <ul>{this.state.reviews.map(reviewElem => <li key={reviewElem}>{reviewElem}</li>)} </ul>;\n    }    \n\n    //map() - categories\n    categoryMap(){\n        return <div>{this.state.categories.map(elem => <button className=\"btn btn-light border shadow mb-2 mr-4\"> {elem} </button>)}</div>     \n    }\n    \n    //map() - tags\n    // tagMap(){\n    \n    //     const incrementBtn = \n    //     <div className=\"text-right\"> \n    //         <button onClick={() => this.incrementHandler(this.product)} className=\"btn btn-sm btn-warning mr-2\">+</button> \n    //         <button className=\"btn btn-sm btn-danger\"> <i className=\"fa fa-trash\"></i></button> \n    //     </div>;\n\n    //     const tagMapper = this.state.fishes.map(fish => \n    //         <li key={fish} className=\"card p-3 mb-2\"> {fish} {incrementBtn}</li>);\n    //         return tagMapper;\n    // }\n\n    btnDanger(){\n        return this.state.cartCount===0 ? 'btn btn-lg btn-danger shadow text-white' \n        : 'btn btn-lg btn-success shadow text-white';\n    }\n\n    formatCount(){\n        const {cartCount} = this.state; //destructuring happens\n        const emptySpan = <span className=\"badge badge-light\">Empty</span>;\n        return cartCount === 0 ? emptySpan : cartCount;\n    }    \n}\n\n\n    \nexport default Counter;\n\n// between div tag, is a jsx expression which gets compiled to React.createElement()\n// between {}, we can add js expression, func that produces,returns value\n                   \n"]},"metadata":{},"sourceType":"module"}