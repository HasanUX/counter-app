{"ast":null,"code":"var _jsxFileName = \"/Users/hasansharif/Desktop/Projects/react/counter-app/src/App.js\";\n\n/* eslint-disable no-unused-vars */\nimport React, { Component } from 'react';\nimport Navbar from './components/navbar';\nimport Tables from './components/table';\nimport { getCategories } from \"./data/fakeCategoryList\";\nimport { getFishes, getWeight } from \"./data/fakeFishList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      headers: [{\n        id: 1,\n        category: getCategories(),\n        value: 9\n      }],\n      tables: [{\n        id: 1,\n        value: 5,\n        capacity: 0,\n        totalWeight: getWeight,\n        count: getFishes()\n      }],\n      cards: [{\n        id: 1,\n        name: \"Ilish 2kg\"\n      }, {\n        id: 2,\n        name: \"Shutki 5kg\"\n      }]\n    };\n\n    this.incrementHandler = counter => {\n      const counters = [...this.state.counters];\n      const index = counters.indexOf(counter);\n      counters[index] = { ...counter\n      };\n      counters[index].capacity++;\n      this.setState({\n        counters\n      });\n    };\n\n    this.deleteHandler = cardID => {\n      // if(this.fish === undefined) {return} //catcher to handle error\n      const cards = this.state.cards.filter(c => c.id !== cardID);\n      this.setState({\n        cards\n      }); // if (this.setState({cartCount: this.state.cartCount - 1})) return 0;\n    };\n\n    this.resetHandler = () => {\n      const counters = this.state.counters.map(c => {\n        c.capacity = 0;\n        return c;\n      });\n      this.setState({\n        counters\n      });\n    };\n  }\n\n  render() {\n    const {\n      length: count\n    } = this.state.counters;\n    return (\n      /*#__PURE__*/\n      //here Counter comp will need to render  \n      _jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {\n          counters: this.state.counters.capacity,\n          onIncreament: this.incrementHandler,\n          onReset: this.resetHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          children: /*#__PURE__*/_jsxDEV(Tables, {\n            tables: this.state.tables,\n            count: count,\n            onDelete: this.deleteHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this)\n    );\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/Users/hasansharif/Desktop/Projects/react/counter-app/src/App.js"],"names":["React","Component","Navbar","Tables","getCategories","getFishes","getWeight","App","state","headers","id","category","value","tables","capacity","totalWeight","count","cards","name","incrementHandler","counter","counters","index","indexOf","setState","deleteHandler","cardID","filter","c","resetHandler","map","render","length"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { Component } from 'react';\nimport Navbar from './components/navbar';\nimport Tables from './components/table';\nimport { getCategories } from \"./data/fakeCategoryList\";\nimport { getFishes, getWeight } from \"./data/fakeFishList\";\n\nexport class App extends Component{\n  \n  state = {\n    headers: [\n        {\n            id:1, \n            category: getCategories(), \n            value: 9\n        }\n    ],\n\n    tables: [\n        {\n            id: 1, \n            value: 5,\n            capacity: 0,\n            totalWeight: getWeight,\n            count: getFishes()\n        }\n    ],\n\n    cards: [\n        {id: 1, name: \"Ilish 2kg\"},\n        {id: 2, name: \"Shutki 5kg\"}\n    ]\n};\n\n// increment/increase qty method \nincrementHandler = counter => {\n    const counters = [...this.state.counters];\n    const index = counters.indexOf(counter);\n    counters[index] = { ...counter };\n    counters[index].capacity++;\n    this.setState({ counters });\n};\n\n// delete/increment item method \ndeleteHandler = (cardID) => {\n    // if(this.fish === undefined) {return} //catcher to handle error\n    const cards = this.state.cards.filter(c => c.id !== cardID);\n    this.setState({ cards });\n    // if (this.setState({cartCount: this.state.cartCount - 1})) return 0;\n};\n\n// undo/reset method \nresetHandler = () => {\n    const counters = this.state.counters.map(c => {\n        c.capacity = 0;\n        return c;\n    });\n   \n    this.setState({ counters });\n}\n\n\n  render(){\n    const {length: count} = this.state.counters;\n    \n    return (//here Counter comp will need to render  \n      \n      <React.Fragment>\n        <Navbar counters={this.state.counters.capacity}\n        onIncreament={this.incrementHandler}\n        onReset={this.resetHandler}\n        />\n        <main>\n          <Tables \n          tables={this.state.tables}\n         \n          count={count}\n          onDelete={this.deleteHandler}\n           />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}