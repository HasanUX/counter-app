{"ast":null,"code":"var _jsxFileName = \"/Users/hasansharif/Desktop/Projects/react/counter-app/src/components/cards.js\";\n\n/* eslint-disable no-unused-vars */\nimport React from 'react'; //controlled comp: doesn't have own local state, it receives data via props and raises\n//events when data needs to be changed.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Card extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.styles = {\n      width: \"18rem\"\n    };\n  }\n\n  //eventHandler for the increment btn\n  //binding a func using arrow func so that we don't need to create constructor\n  //setState is a built-in method to notify react that state prop value is gonna be changed\n  //react will then schedule a async call to the render(), i,e this is going to be happened in the future\n  //     incrementHandler = () => {\n  //         this.setState({ cartValue: this.state.cartValue + 1 });\n  //    };\n  render() {\n    return (\n      /*#__PURE__*/\n      //react element starts\n      //we can add <React.Fragment> instead of <div></div> if we don't want this blank div\n      _jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card mb-2\",\n          style: this.styles,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title mb-4\",\n              children: this.props.card.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-heart-o\",\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-sm btn-primary mr-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-table mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 29\n                }, this), \" Add to table\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.props.onDelete(this.props.card.id),\n                className: \"btn btn-sm btn-danger\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-backward\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 29\n                }, this), \" Pass it\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)\n    );\n  }\n\n  formatCount() {\n    const {\n      cartValue\n    } = this.state; //destructuring happens\n\n    const emptySpan = /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"badge badge-light\",\n      children: \"Empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 27\n    }, this);\n\n    return cartValue === 0 ? emptySpan : cartValue;\n  }\n\n}\nexport default Card;","map":{"version":3,"sources":["/Users/hasansharif/Desktop/Projects/react/counter-app/src/components/cards.js"],"names":["React","Card","Component","styles","width","render","props","card","name","onDelete","id","formatCount","cartValue","state","emptySpan"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;;;AACA,OAAO,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAMtCC,MANsC,GAM7B;AACNC,MAAAA,KAAK,EAAE;AADD,KAN6B;AAAA;;AAUtC;AACA;AACA;AACA;AACJ;AACA;AACA;AAEIC,EAAAA,MAAM,GAAE;AAEJ;AAAA;AAEI;AACA;AAEA,cAAC,KAAD,CAAO,QAAP;AAAA,+BAEI;AAAK,UAAA,SAAS,EAAC,WAAf;AAA2B,UAAA,KAAK,EAAE,KAAKF,MAAvC;AAAA,iCAEI;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACI;AAAI,cAAA,SAAS,EAAC,iBAAd;AAAA,wBAAiC,KAAKG,KAAL,CAAWC,IAAX,CAAgBC;AAAjD;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAG,cAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAII;AAAK,cAAA,SAAS,EAAC,QAAf;AAAA,sCACI;AAAS,gBAAA,SAAS,EAAC,6BAAnB;AAAA,wCACA;AAAG,kBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,wBADA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAKI;AAAQ,gBAAA,OAAO,EAAI,MAAM,KAAKF,KAAL,CAAWG,QAAX,CAAoB,KAAKH,KAAL,CAAWC,IAAX,CAAgBG,EAApC,CAAzB;AAAmE,gBAAA,SAAS,EAAC,uBAA7E;AAAA,wCACA;AAAG,kBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,wBADA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AALJ;AA0BH;;AAKDC,EAAAA,WAAW,GAAE;AACT,UAAM;AAACC,MAAAA;AAAD,QAAc,KAAKC,KAAzB,CADS,CACuB;;AAChC,UAAMC,SAAS,gBAAG;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAlB;;AACA,WAAOF,SAAS,KAAK,CAAd,GAAkBE,SAAlB,GAA8BF,SAArC;AACH;;AAvDqC;AA6D1C,eAAeX,IAAf","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React from 'react';\n\n//controlled comp: doesn't have own local state, it receives data via props and raises\n//events when data needs to be changed.\nexport class Card extends React.Component {\n    // state = {\n    //     cartValue: this.props.card.value, //declared props that was inserted in counters.js\n    //     itemName: this.props.card.name\n    // };\n\n    styles = {\n       width: \"18rem\"\n    };\n\n    //eventHandler for the increment btn\n    //binding a func using arrow func so that we don't need to create constructor\n    //setState is a built-in method to notify react that state prop value is gonna be changed\n    //react will then schedule a async call to the render(), i,e this is going to be happened in the future\n//     incrementHandler = () => {\n//         this.setState({ cartValue: this.state.cartValue + 1 });\n//    };\n\n    render(){ \n\n        return (\n\n            //react element starts\n            //we can add <React.Fragment> instead of <div></div> if we don't want this blank div\n            \n            <React.Fragment>\n                \n                <div className=\"card mb-2\" style={this.styles} >\n                    \n                    <div className=\"card-body\">\n                        <h5 className=\"card-title mb-4\">{this.props.card.name}</h5>\n                        <i className=\"fa fa-heart-o\"> </i>\n\n                        <div className=\"d-flex\">\n                            <button  className=\"btn btn-sm btn-primary mr-2\">\n                            <i className=\"fa fa-table mr-2\"></i> Add to table\n                            </button>\n\n                            <button onClick = {() => this.props.onDelete(this.props.card.id)}  className=\"btn btn-sm btn-danger\">\n                            <i className=\"fa fa-backward\"></i> Pass it\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        ); \n    }\n\n  \n  \n\n    formatCount(){\n        const {cartValue} = this.state; //destructuring happens\n        const emptySpan = <span className=\"badge badge-light\">Empty</span>;\n        return cartValue === 0 ? emptySpan : cartValue;\n    }    \n    \n\n}\n\n    \nexport default Card;\n\n"]},"metadata":{},"sourceType":"module"}