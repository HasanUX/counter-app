{"ast":null,"code":"var _jsxFileName = \"/Users/hasansharif/Desktop/Projects/react/counter-app/src/components/counter.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      mainTitle: \"Machbazaar.com\",\n      subTitle: \"Online fish selling platform.\",\n      imageUrl: \"https:/picsum.photos/90\",\n      cartCount: 0,\n      categories: ['Sea', 'Deshi', 'Shutki'],\n      tags: ['Rui Fish', 'Ilish Fish', 'Lobster Fish'],\n      reviews: ['Good one', 'Bad one', 'Satisfied', 'Loved it']\n    };\n    this.styles = {\n      borderRadius: \"50%\",\n      marginRight: \"15px\"\n    };\n\n    this.incrementHandler = product => {\n      console.log(product);\n      this.setState({\n        cartCount: this.state.cartCount + 1\n      }); //setState is a built-in method to notify react that state prop value is gonna be changed\n      //react will then schedule a async call to the render(), i,e this is going to be happened in the future\n    };\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      //react element starts\n      //we can add <React.Fragment> instead of <div></div> if we don't want this blank div\n      _jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-9 col-12 mt-4 d-flex justify-content-start\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              style: this.styles,\n              className: \"border\",\n              src: this.state.imageUrl,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"font-weight-bold\",\n                children: this.state.mainTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: this.state.subTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-3 col-12 text-right mt-4\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              type: \"button\",\n              className: this.btnDanger(),\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-shopping-cart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 29\n              }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"badge badge-light\",\n                children: [this.formatCount(), \"  \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 mt-5 d-flex justify-content-start align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"mr-4\",\n              children: \"Categories\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-outline btn-outline-light text-dark shadow\",\n              children: this.categoryMap()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 col-12 mt-5\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: this.tagMap()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 col-12 mt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Reviews\", this.state.reviews.length != 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\" (\", this.state.reviews.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 71\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 25\n            }, this), this.state.reviews.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"There are no reviews.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 61\n            }, this), this.reviewMap()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)\n    );\n  } //eventHandler for the increment btn\n  //binding a func using arrow func so that we don't need to create constructor\n\n\n  //conditional rendering for review list \n  //another conditional rendering is shown where the func is called using truthy,falsy\n  //key={} is required to assign unique key value to each list for backend integration\n  //another way of map() is showed\n  reviewMap() {\n    if (this.state.reviews.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please add reviews.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 53\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [this.state.reviews.map(reviewElem => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: reviewElem\n      }, reviewElem, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 58\n      }, this)), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 16\n    }, this);\n  } //map() - categories\n\n\n  categoryMap() {\n    // const {categories} = this.state;\n    // const catElem = this.state.categories.map(elem => elem);   \n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      children: this.state.categories.map(elem => elem)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 16\n    }, this);\n  } //map() - tags\n\n\n  tagMap() {\n    const incrementBtn = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-right\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.incrementHandler(this.product),\n        className: \"btn btn-sm btn-warning mr-2\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-sm btn-danger\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-trash\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 56\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this);\n\n    const tagMapper = this.state.tags.map(tagElem => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"card p-3 mb-2\",\n      children: [\" \", tagElem, \" \", incrementBtn]\n    }, tagElem, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 58\n    }, this));\n    return tagMapper;\n  }\n\n  btnDanger() {\n    return this.state.cartCount === 0 ? 'btn btn-lg btn-danger shadow text-white' : 'btn btn-lg btn-success shadow text-white';\n  }\n\n  formatCount() {\n    const {\n      cartCount\n    } = this.state; //destructuring happens\n\n    const emptySpan = /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"badge badge-light\",\n      children: \"Empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 27\n    }, this);\n\n    return cartCount === 0 ? emptySpan : cartCount;\n  }\n\n}\n\nexport default Counter; // between div tag, is a jsx expression which gets compiled to React.createElement()\n// between {}, we can add js expression, func that produces,returns value","map":{"version":3,"sources":["/Users/hasansharif/Desktop/Projects/react/counter-app/src/components/counter.jsx"],"names":["React","Component","Counter","state","mainTitle","subTitle","imageUrl","cartCount","categories","tags","reviews","styles","borderRadius","marginRight","incrementHandler","product","console","log","setState","render","btnDanger","formatCount","categoryMap","tagMap","length","reviewMap","map","reviewElem","elem","incrementBtn","tagMapper","tagElem","emptySpan"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\n\nclass Counter extends React.Component {\n    state = {\n        mainTitle: \"Machbazaar.com\",\n        subTitle: \"Online fish selling platform.\",\n        imageUrl: \"https:/picsum.photos/90\",\n        cartCount: 0,\n        categories: ['Sea', 'Deshi', 'Shutki'],\n        tags: ['Rui Fish', 'Ilish Fish', 'Lobster Fish'],\n        reviews: ['Good one', 'Bad one', 'Satisfied', 'Loved it']\n    };\n\n    styles = {\n        borderRadius: \"50%\",\n        marginRight: \"15px\"\n    };\n\n\n    render(){ \n        return (\n            //react element starts\n            //we can add <React.Fragment> instead of <div></div> if we don't want this blank div\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-9 col-12 mt-4 d-flex justify-content-start\">\n                        <img style={this.styles} className=\"border\" src={this.state.imageUrl} alt=\"\"/> \n                        <div>\n                            <h1 className=\"font-weight-bold\">\n                                {this.state.mainTitle}\n                            </h1> \n                            <h4>{this.state.subTitle}</h4>\n                        </div>\n                    </div>\n\n                 \n                    \n                    <div className=\"col-md-3 col-12 text-right mt-4\">\n                        <a type=\"button\" className={this.btnDanger()}>\n                            <i className=\"fa fa-shopping-cart\"></i>&nbsp;&nbsp; \n                            <span className=\"badge badge-light\">{this.formatCount()}  </span>\n                        </a>  \n                    </div> \n\n                    <div className=\"col-12 mt-5 d-flex justify-content-start align-items-center\">\n                        <h3 className=\"mr-4\">Categories</h3>\n\n                        <button className=\"btn btn-outline btn-outline-light text-dark shadow\">{this.categoryMap()}</button>\n\n                    </div>\n\n                    {/* Products list */}\n                    <div className=\"col-md-6 col-12 mt-5\">\n                        <ul>\n                            {this.tagMap()}\n                        </ul> \n                    </div>\n\n                    {/* Review list */}\n                    <div className=\"col-md-6 col-12 mt-5\">\n                        <h4>Reviews{this.state.reviews.length != 0 && <span> ({this.state.reviews.length})</span>}</h4>\n                        {/* truthy,falsy applied using && after condition which can be used to conditional render  */}\n                        {this.state.reviews.length === 0 && <p>There are no reviews.</p>}\n                        {this.reviewMap()}\n                    </div>\n\n                </div>\n            </div>\n        ); \n    }\n\n    //eventHandler for the increment btn\n    //binding a func using arrow func so that we don't need to create constructor\n    incrementHandler = product => {\n        console.log(product);\n        this.setState({ cartCount: this.state.cartCount + 1 })\n        //setState is a built-in method to notify react that state prop value is gonna be changed\n        //react will then schedule a async call to the render(), i,e this is going to be happened in the future\n    }\n\n\n\n    //conditional rendering for review list \n    //another conditional rendering is shown where the func is called using truthy,falsy\n    //key={} is required to assign unique key value to each list for backend integration\n    //another way of map() is showed\n    reviewMap(){\n        if (this.state.reviews.length === 0) return <p>Please add reviews.</p>;\n        return <ul>{this.state.reviews.map(reviewElem => <li key={reviewElem}>{reviewElem}</li>)} </ul>;\n    }    \n\n    //map() - categories\n    categoryMap(){\n        // const {categories} = this.state;\n        // const catElem = this.state.categories.map(elem => elem);   \n        return <button>{this.state.categories.map(elem => elem)}</button>     \n    }\n    \n    //map() - tags\n    tagMap(){\n        const incrementBtn = \n        <div className=\"text-right\"> \n            <button onClick={() => this.incrementHandler(this.product)} className=\"btn btn-sm btn-warning mr-2\">+</button> \n            <button className=\"btn btn-sm btn-danger\"> <i className=\"fa fa-trash\"></i></button> \n        </div>;\n        const tagMapper = this.state.tags.map(tagElem => <li key={tagElem} className=\"card p-3 mb-2\"> {tagElem} {incrementBtn}</li>);\n        return tagMapper;\n    }\n\n    btnDanger(){\n        return this.state.cartCount===0 ? 'btn btn-lg btn-danger shadow text-white' \n        : 'btn btn-lg btn-success shadow text-white';\n    }\n\n    formatCount(){\n        const {cartCount} = this.state; //destructuring happens\n        const emptySpan = <span className=\"badge badge-light\">Empty</span>;\n        return cartCount === 0 ? emptySpan : cartCount;\n    }    \n}\n\n\n    \nexport default Counter;\n\n// between div tag, is a jsx expression which gets compiled to React.createElement()\n// between {}, we can add js expression, func that produces,returns value\n                   \n"]},"metadata":{},"sourceType":"module"}