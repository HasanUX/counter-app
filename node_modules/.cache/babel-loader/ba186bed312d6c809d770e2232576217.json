{"ast":null,"code":"var _jsxFileName = \"/Users/hasansharif/Desktop/Projects/react/counter-app/src/App.js\";\n\n/* eslint-disable no-unused-vars */\nimport React, { Component } from 'react';\nimport Counters from './components/counters';\nimport Navbar from './components/navbar';\nimport { getCategories } from \"./data/fakeCategoryList\";\nimport { getFishes, getWeight } from \"./data/fakeFishList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      headers: [{\n        id: 1,\n        category: getCategories(),\n        value: 9\n      }],\n      counters: [{\n        id: 1,\n        value: 5,\n        capacity: 0,\n        totalWeight: getWeight,\n        count: getFishes()\n      }, {\n        id: 2,\n        value: 5,\n        capacity: 0,\n        totalWeight: getWeight,\n        count: getFishes()\n      }],\n      cards: [{\n        id: 1,\n        name: \"Ilish 2kg\"\n      }, {\n        id: 2,\n        name: \"Shutki 5kg\"\n      }]\n    };\n\n    this.incrementHandler = counter => {\n      const counters = [...this.state.counters];\n      const index = counters.indexOf(counter);\n      counters[index] = { ...counter\n      };\n      counters[index].capacity++;\n      this.setState({\n        counters\n      });\n    };\n\n    this.deleteHandler = cardID => {\n      // if(this.fish === undefined) {return} //catcher to handle error\n      const cards = this.state.cards.filter(c => c.id !== cardID);\n      this.setState({\n        cards\n      });\n      console.log(\"clicked to \", cardID); // if (this.setState({cartCount: this.state.cartCount - 1})) return 0;\n    };\n\n    this.resetHandler = () => {\n      const counters = this.state.counters.map(c => {\n        c.capacity = 0;\n        return c;\n      });\n      this.setState({\n        counters\n      });\n    };\n  }\n\n  render() {\n    const {\n      length: count\n    } = this.state.counters;\n    return (\n      /*#__PURE__*/\n      //here Counter comp will need to render  \n      _jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {\n          counters: this.state.counters\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          children: /*#__PURE__*/_jsxDEV(Counters, {\n            counters: this.state.counters,\n            headers: this.state.headers,\n            cards: this.state.cards,\n            count: count,\n            onIncreament: this.incrementHandler,\n            onDelete: this.deleteHandler,\n            onReset: this.resetHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this)\n    );\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/Users/hasansharif/Desktop/Projects/react/counter-app/src/App.js"],"names":["React","Component","Counters","Navbar","getCategories","getFishes","getWeight","App","state","headers","id","category","value","counters","capacity","totalWeight","count","cards","name","incrementHandler","counter","index","indexOf","setState","deleteHandler","cardID","filter","c","console","log","resetHandler","map","render","length"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { Component } from 'react';\nimport Counters from './components/counters';\nimport Navbar from './components/navbar';\nimport { getCategories } from \"./data/fakeCategoryList\";\nimport { getFishes, getWeight } from \"./data/fakeFishList\";\n\nexport class App extends Component{\n  \n  state = {\n    headers: [\n        {\n            id:1, \n            category: getCategories(), \n            value: 9\n        }\n    ],\n\n    counters: [\n        {\n            id: 1, \n            value: 5,\n            capacity: 0,\n            totalWeight: getWeight,\n            count: getFishes()\n        },\n        {\n          id: 2, \n          value: 5,\n          capacity: 0,\n          totalWeight: getWeight,\n          count: getFishes()\n      }\n    ],\n\n    cards: [\n        {id: 1, name: \"Ilish 2kg\"},\n        {id: 2, name: \"Shutki 5kg\"}\n    ]\n};\n\n// increment/increase qty method \nincrementHandler = counter => {\n    const counters = [...this.state.counters];\n    const index = counters.indexOf(counter);\n    counters[index] = { ...counter };\n    counters[index].capacity++;\n    this.setState({ counters });\n};\n\n// delete/increment item method \ndeleteHandler = (cardID) => {\n    // if(this.fish === undefined) {return} //catcher to handle error\n    const cards = this.state.cards.filter(c => c.id !== cardID);\n    this.setState({ cards });\n    console.log(\"clicked to \", cardID);\n    // if (this.setState({cartCount: this.state.cartCount - 1})) return 0;\n};\n\n// undo/reset method \nresetHandler = () => {\n    const counters = this.state.counters.map(c => {\n        c.capacity = 0;\n        return c;\n    });\n   \n    this.setState({ counters });\n}\n\n\n  render(){\n    const {length: count} = this.state.counters;\n    \n    return (//here Counter comp will need to render  \n      \n      <React.Fragment>\n        <Navbar counters={this.state.counters}/>\n        <main>\n          <Counters \n          counters={this.state.counters}\n          headers={this.state.headers}\n          cards={this.state.cards}\n          count={count}\n          onIncreament={this.incrementHandler}\n          onDelete={this.deleteHandler}\n          onReset={this.resetHandler} />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}